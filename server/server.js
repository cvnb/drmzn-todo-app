!function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s="./src/server.ts")}({"./src/components/footer.tsx":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("react");e.default=n.memo(t=>{const e=t.state.Main.todo.options;if(!e.hasData)return null;const o=e.isOneCount?"item":"items";return n.createElement("footer",{className:"footer"},n.createElement("span",{className:"todo-count"},n.createElement("strong",null,e.countNotComplete)," ",o," left"),n.createElement("ul",{className:"filters"},n.createElement("li",null,n.createElement("a",{className:e.filter.all?"selected":"",href:"#/"},"All")),n.createElement("li",null,n.createElement("a",{className:e.filter.active?"selected":"",href:"#/active"},"Active")),n.createElement("li",null,n.createElement("a",{className:e.filter.completed?"selected":"",href:"#/completed"},"Completed"))),(()=>{if(e.hasCompleted)return n.createElement("button",{className:"clear-completed"},"Clear completed")})())})},"./src/components/header.tsx":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("react");e.default=n.memo(()=>n.createElement("div",{id:"header"},n.createElement("header",{className:"header"},n.createElement("h1",null,"todos"),n.createElement("input",{className:"new-todo",placeholder:"What needs to be done?",autoFocus:!0}))))},"./src/components/root.tsx":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("react"),i=o("react-redux"),a=o("./src/components/header.tsx"),s=o("./src/components/footer.tsx"),r=o("./src/components/todos.tsx");e.default=i.connect(function(t){return t})(t=>n.createElement("section",{className:"todoapp"},n.createElement(a.default,null),n.createElement(r.default,{state:t.state}),n.createElement(s.default,{state:t.state})))},"./src/components/todo.tsx":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("react"),i=o("./src/config/functions.ts");e.default=n.memo(t=>{const e=t.data;return n.createElement("li",{key:e.id,"data-id":e.id,className:i.classNames(e)},n.createElement("div",{className:"view"},n.createElement("input",{className:"toggle",type:"checkbox",checked:e.isCompleted,onChange:function(){}}),n.createElement("label",null,e.text),n.createElement("button",{className:"destroy"})),n.createElement("input",{type:"text",className:"edit",defaultValue:e.text,"data-text":e.text}))})},"./src/components/todos.tsx":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("react"),i=o("./src/components/todo.tsx");e.default=n.memo(t=>{const e=t.state.Main.todo.data,o=t.state.Main.todo.options;if(!o.hasData)return null;return n.createElement("section",{className:"main"},n.createElement("input",{id:"toggle-all",className:"toggle-all",type:"checkbox",checked:o.isAllComplete,onChange:function(){}}),n.createElement("label",{htmlFor:"toggle-all"},"Mark all as complete"),n.createElement("ul",{className:"todo-list"},e.filter(t=>t.isVisible).map(t=>n.createElement(i.default,{data:t,key:t.id}))))})},"./src/config/actions.ts":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("object-path-immutable/index");var i;(i=e.page||(e.page={})).type="PAGE",i.dispatch=((t,e)=>{t.dispatch({type:i.type,page:e})}),i.reduce=((t,e)=>n(t).set("Main.options.mainPage",{}).set(`Main.options.mainPage.${e.page}`,!0).value()),function(t){t.type="init",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.init||(e.init={})),function(t){t.type="add",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.add||(e.add={})),function(t){t.type="edit",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.edit||(e.edit={})),function(t){t.type="remove",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.remove||(e.remove={})),function(t){t.type="toggle",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.toggle||(e.toggle={})),function(t){t.type="toggleAll",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.toggleAll||(e.toggleAll={})),function(t){t.type="filterBy",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.filterBy||(e.filterBy={})),function(t){t.type="removeCompleted",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.removeCompleted||(e.removeCompleted={})),function(t){t.type="toggleEditing",t.dispatch=((e,o,n)=>{e.dispatch({type:t.type,data:o,options:n})}),t.reduce=((t,e)=>n(t).set("Main.todo.data",e.data).set("Main.todo.options",e.options).value())}(e.toggleEditing||(e.toggleEditing={})),function(t){t.type="monitorSaga",t.dispatch=((e,o)=>{e.dispatch({type:t.type,data:o})}),t.reduce=((t,e)=>n(t).set("Main.saga.test",e.data).set("Main.saga.reducer","yoyo").value())}(e.monitorSaga||(e.monitorSaga={}))},"./src/config/functions.ts":function(t,e,o){"use strict";function n(t){return JSON.parse(JSON.stringify(t))}function i(t,e){let o="all",n="/";return"#/"===e&&(o="all",n="/"),"#/active"===e&&(o="active",n="/active"),"#/completed"===e&&(o="completed",n="/completed"),"type"===t?o:n}function a(){return Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15)}function s(t,e){let o=-1;for(let n=0;n<t.length;n++){t[n].id===e&&(o=n)}return o}function r(t,e){const o=t.getState();let n={all:!0};o&&o.Main&&o.Main.todo&&o.Main.todo.options&&o.Main.todo.options.filter&&(n=Object.assign({},o.Main.todo.options.filter));const i={countTotal:0,countComplete:0,countNotComplete:0,hasCompleted:!1,isAllComplete:!1,isEditing:!1,hasData:!1,isOneCount:!1,filter:n};i.countTotal=e.length,e.forEach(t=>{t.isCompleted?i.countComplete=i.countComplete+1:i.countNotComplete=i.countNotComplete+1,t.isEditing&&(i.isEditing=!0)}),i.countComplete>0&&(i.hasCompleted=!0),e.length===i.countComplete&&(i.isAllComplete=!0),e.length>0&&(i.hasData=!0),1===i.countNotComplete&&(i.isOneCount=!0);try{localStorage.setItem("todos-drmzn",JSON.stringify(e))}catch(t){}return i}Object.defineProperty(e,"__esModule",{value:!0}),e.classNames=function(t){let e="";return t.isCompleted&&(e=`${e} completed`),t.isEditing&&(e=`${e} editing`),e.trim()},e.getProp=i,e.randomId=a,e.getIndex=s,e.computeOptions=r,e.computeInit=function(t,e){let o;try{(o=JSON.parse(localStorage.getItem("todos-drmzn"))).forEach(t=>{t.isEditing=!1})}catch(t){}o||(o=[]);const n=r(t,o),a=i("type",e);return n.filter={},n.filter[a]=!0,{data:o,options:n}},e.computeAdd=function(t,e){const o=t.getState(),i=n(o.Main.todo.data);let s=!0;o.Main.todo.options.filter.completed&&(s=!1);const c={id:a(),text:e.trim(),isCompleted:!1,isVisible:s};return i.push(c),{data:i,options:r(t,i)}},e.computeEdit=function(t,e,o){const i=n(t.getState().Main.todo.data);return i[s(i,e)].text=o.trim(),{data:i,options:r(t,i)}},e.computeRemove=function(t,e){const o=n(t.getState().Main.todo.data),i=s(o,e);return o.splice(i,1),{data:o,options:r(t,o)}},e.computeToggle=function(t,e){const o=t.getState(),i=n(o.Main.todo.data),a=s(i,e);return i[a].isCompleted=!i[a].isCompleted,o.Main.todo.options.filter.completed&&(i[a].isVisible=!!i[a].isCompleted),o.Main.todo.options.filter.active&&(i[a].isVisible=!i[a].isCompleted),{data:i,options:r(t,i)}},e.computeToggleAll=function(t){const e=t.getState(),o=n(e.Main.todo.data);let i=!0;return o.forEach(t=>{!1===t.isCompleted&&(i=!1)}),o.forEach(t=>{i?(t.isCompleted=!1,e.Main.todo.options.filter.completed&&(t.isVisible=!1),e.Main.todo.options.filter.active&&(t.isVisible=!0)):(t.isCompleted=!0,e.Main.todo.options.filter.completed&&(t.isVisible=!0),e.Main.todo.options.filter.active&&(t.isVisible=!1))}),{data:o,options:r(t,o)}},e.computeFilterBy=function(t,e="all"){const o=n(t.getState().Main.todo.data);"active"===e&&o.forEach(t=>{!1===t.isCompleted?t.isVisible=!0:t.isVisible=!1}),"completed"===e&&o.forEach(t=>{!0===t.isCompleted?t.isVisible=!0:t.isVisible=!1}),"all"===e&&o.forEach(t=>{t.isVisible=!0});const i=r(t,o);return i.filter={},i.filter[e]=!0,{data:o,options:i}},e.computeRemoveCompleted=function(t){const e=n(t.getState().Main.todo.data).filter(t=>!1===t.isCompleted);return{data:e,options:r(t,e)}},e.computeToggleEdit=function(t,e,o,i){const a=n(t.getState().Main.todo.data);if(a.forEach(t=>{t.isEditing=!1}),e&&"on"===o){const t=s(a,e);t>-1&&(a[t].isEditing=!0)}e&&i&&"off"===o&&(a[s(a,e)].text=i);return{data:a,options:r(t,a)}}},"./src/config/placeholder.ts":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.placeholder=((t,e,o)=>`<!doctype html>\n<html lang="en">\n\t<head>\n\t\t<meta charset="utf-8">\n\t\t<meta name="viewport" content="width=device-width, initial-scale=1">\n\t\t<title>Drmzn • TodoMVC</title>\n\t\t<link rel="stylesheet" href="/css/base.css">\n\t\t<link rel="stylesheet" href="/css/index.css">\n\t\t<link rel="stylesheet" href="/css/app.css">\n\t</head>\n\t<body>\n\t\t<div id="root">${t}</div>\n\n\t\t<footer class="info">\n\t\t\t<p>Double-click to edit a todo</p>\n\t\t\t<p>Created by <a href="mailto:alex.tzvetanov@gmail.com">Alex Tzvetanov</a></p>\n\t\t\t<p>Part of <a href="http://todomvc.com">TodoMVC</a></p>\n\t\t</footer>\n\n\t\t<script>\n      window.__PRELOADED_STATE__ = '${e}';\n    <\/script>\n\n\t\t<script src="/js/base.js"><\/script>\n    <script type="text/javascript" src="/js/main.${o}.min.js"><\/script>\n  </body>\n</html>`)},"./src/config/store.ts":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("./src/config/actions.ts"),i=o("redux"),a=o("redux-saga"),s=o("redux-devtools-extension"),r=o("drmzn-redux");e.sagaMiddleware=a.default(),e.storeCreate=(()=>i.createStore(r.actionReducer(n),r.hydrate,s.composeWithDevTools(i.applyMiddleware(e.sagaMiddleware)))),e.store=e.storeCreate()},"./src/controllers/TodoController.ts":function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const n=o("./src/config/actions.ts"),i=o("./src/config/functions.ts");e.Todo=(t=>{return{init:e=>{const{data:o,options:a}=i.computeInit(t,e);n.init.dispatch(t,o,a)},add:e=>{const{data:o,options:a}=i.computeAdd(t,e);n.add.dispatch(t,o,a)},edit:(e,o)=>{const{data:a,options:s}=i.computeEdit(t,e,o);n.edit.dispatch(t,a,s)},remove:e=>{const{data:o,options:a}=i.computeRemove(t,e);n.remove.dispatch(t,o,a)},toggle:e=>{const{data:o,options:a}=i.computeToggle(t,e);n.toggle.dispatch(t,o,a)},toggleAll:()=>{const{data:e,options:o}=i.computeToggleAll(t);n.toggleAll.dispatch(t,e,o)},filterBy:e=>{const{data:o,options:a}=i.computeFilterBy(t,e);n.filterBy.dispatch(t,o,a)},removeCompleted:()=>{const{data:e,options:o}=i.computeRemoveCompleted(t);n.removeCompleted.dispatch(t,e,o)},toggleEditing:(e,o,a)=>{const{data:s,options:r}=i.computeToggleEdit(t,e,o,a);n.toggleEditing.dispatch(t,s,r)}}})},"./src/server.ts":function(t,e,o){"use strict";var n=this&&this.__awaiter||function(t,e,o,n){return new(o||(o=Promise))(function(i,a){function s(t){try{c(n.next(t))}catch(t){a(t)}}function r(t){try{c(n.throw(t))}catch(t){a(t)}}function c(t){t.done?i(t.value):new o(function(e){e(t.value)}).then(s,r)}c((n=n.apply(t,e||[])).next())})};Object.defineProperty(e,"__esModule",{value:!0});const i=o("express"),a=o("compression"),s=o("https"),r=o("fs"),c=o("./src/config/store.ts"),l=o("./src/controllers/TodoController.ts"),d=o("./src/config/placeholder.ts"),p=o("drmzn-react"),u=o("./src/components/root.tsx"),m=i();m.use(a()),m.get("/",(t,e)=>n(this,void 0,void 0,function*(){const o=c.storeCreate();yield l.Todo(o).init("/"),p.ssr(d.placeholder,u.default,"0.0.2").render(o,t,e)})),m.use("/",i.static("public"));const f={key:r.readFileSync("cert.key"),cert:r.readFileSync("cert.crt")};s.createServer(f,m).listen(443)},compression:function(t,e){t.exports=require("compression")},"drmzn-react":function(t,e){t.exports=require("drmzn-react")},"drmzn-redux":function(t,e){t.exports=require("drmzn-redux")},express:function(t,e){t.exports=require("express")},fs:function(t,e){t.exports=require("fs")},https:function(t,e){t.exports=require("https")},"object-path-immutable/index":function(t,e){t.exports=require("object-path-immutable/index")},react:function(t,e){t.exports=require("react")},"react-redux":function(t,e){t.exports=require("react-redux")},redux:function(t,e){t.exports=require("redux")},"redux-devtools-extension":function(t,e){t.exports=require("redux-devtools-extension")},"redux-saga":function(t,e){t.exports=require("redux-saga")}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,